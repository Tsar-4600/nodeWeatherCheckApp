<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="/css/style.css" type=" text/css">
    <link re>
</head>

<body>
    <div class="container">
        <h1>Weather looker</h1>
        <p id="result"></p>
        <p id="temperature"></p>
        <p id="weather-description"></p>
        <p id="city"></p>
        <p id="country"></p>
    </div>


    <script>
        function getLocation() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(showPosition, showError);
            } else {

            }
        }
        function getIp() {
            const url = "https://api.ipify.org?format=json";

            fetch(url)
                .then(response => response.json()) // Преобразуем ответ в JSON
                .then(data => {
                    //возвращаем ip адресс
                    console.log(data.ip);
                    return showWeatherByIP(data.ip);
                })
                .catch(error => {
                    console.error('Error fetching the IP address:', error);
                });
        };
        function showWeatherByIP(ip) {
            console.log(ip);
            const GeoApiKey = "at_WNljypyoV3PRwDD6L0tEuzn1jctT8";
            const WeatherApiKey = "3bfcbd3b32a312ae3b9d15f97bdc7467";
            const url = `https://geo.ipify.org/api/v2/country?apiKey=${GeoApiKey}&ipAddress=${ip}`;
            fetch(url)
                .then(response => response.json()) // Преобразуем ответ в JSON
                .then(data => {
                    //возвращаем ip адресс
                    console.log(data.location.region);
                    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${data.location.region}&appid=${WeatherApiKey}`)
                        .then(response => response.json()) // Преобразуем ответ в JSON
                        .then(data => {
                            //возвращаем ip адресс
                            document.getElementById("city").innerHTML = "City: " + data.name;
                            document.getElementById("country").innerHTML = "Country: " + data.sys.country;
                            document.getElementById("weather-description").innerHTML = "Weather: " + data.weather[0].main + "<br>" + "Description: " + data.weather[0].description;
                            let rounded = (num, decimals) => Number(num.toFixed(decimals));
                            let temp_KtoC = rounded((data.main.feels_like - 273), 2);
                            document.getElementById("temperature").innerHTML = "Temperature: " + temp_KtoC + "℃";
                        })
                        .catch(error => {
                            console.error('Error fetching the IP address:');
                        });
                })
                .catch(error => {
                    console.error('Error fetching the IP address:');
                });
        }

        function showWeather(lat, lon) {
            const WeatherApiKey = "3bfcbd3b32a312ae3b9d15f97bdc7467"
            const url = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&exclude=hourly,daily&appid=${WeatherApiKey}`;

            fetch(url)
                .then(response => {
                    // Проверка, успешен ли запрос
                    if (!response.ok) {
                        throw new Error(`Ошибка ${response.status}: ${response.statusText}`);
                    }
                    return response.json(); // Получаем данные в формате JSON
                })
                .then(data => {
                    console.log(data); // Печатаем данные
                    document.getElementById("city").innerHTML = "City: " + data.name;
                    document.getElementById("country").innerHTML = "Country: " + data.sys.country;
                    document.getElementById("weather-description").innerHTML = "Weather: " + data.weather[0].main + "<br>" + "Description: " + data.weather[0].description;
                    let rounded = (num, decimals) => Number(num.toFixed(decimals));
                    let temp_KtoC = rounded((data.main.feels_like - 273), 2);
                    document.getElementById("temperature").innerHTML = "Temperature: " + temp_KtoC + "℃";
                })
                .catch(error => {
                    console.error('Произошла ошибка:', error);
                    document.getElementById("weather-description").innerHTML = "Weather: cann't find ur weather with ur geolocation";
                });

        };
        function showPosition(position) {
            const latitude = position.coords.latitude;
            const longtitude = position.coords.longitude;
            showWeather(latitude, longtitude);
        };
        function showError(error) {
            switch (error.code) {
                case error.PERMISSION_DENIED:
                    alert("User denied the request for Geolocation.");
                    getIp();
                    break;
                case error.POSITION_UNAVAILABLE:
                    alert("Location information is unavailable.");
                    break;
                case error.TIMEOUT:
                    alert("The request to get user location timed out.");
                    break;
                case error.UNKNOWN_ERROR:
                    alert("An unknown error occurred.");
                    break;
            }
        };
        getLocation();
    </script>

</body>

</html>